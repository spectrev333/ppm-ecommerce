services:
    db:
        image: postgres:17
        restart: always
        environment:
            POSTGRES_DB: ${DATABASE_NAME}
            POSTGRES_USER: ${DATABASE_USERNAME}
            POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        env_file:
            - .env

    ecommerce:
        build: .
        container_name: django-ecommerce
        restart: always
        ports:
            - "8000:8000"
        depends_on:
            - db
        environment:
            DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
            DEBUG: ${DEBUG}
            DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL}
            DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
            DJANGO_CSRF_TRUSTED_ORIGINS: ${DJANGO_CSRF_TRUSTED_ORIGINS}
            DATABASE_ENGINE: ${DATABASE_ENGINE}
            DATABASE_NAME: ${DATABASE_NAME}
            DATABASE_USERNAME: ${DATABASE_USERNAME}
            DATABASE_PASSWORD: ${DATABASE_PASSWORD}
            DATABASE_HOST: ${DATABASE_HOST}
            DATABASE_PORT: ${DATABASE_PORT}
        env_file:
            - .env
        volumes:
            - ecommerce_static:/app/staticfiles
            - ecommerce_media:/app/media

    caddy:
        image: serfriz/caddy-crowdsec:latest
        container_name: caddy-crowdsec
        restart: always
        environment:
            - BOUNCER_KEY_CADDY=${CROWDSEC_API_KEY}
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./Caddyfile:/etc/caddy/Caddyfile
            - caddy_data:/data
            - caddy_config:/config
            - ecommerce_static:/app/staticfiles
            - ecommerce_media:/app/media
            - caddy_logs:/var/log/caddy
        depends_on:
            - ecommerce

    crowdsec:
        image: docker.io/crowdsecurity/crowdsec:latest
        container_name: crowdsec
        environment:
            - GID=1000
            - COLLECTIONS=crowdsecurity/caddy crowdsecurity/http-cve crowdsecurity/whitelist-good-actors
            - BOUNCER_KEY_CADDY=${CROWDSEC_API_KEY}
        volumes:
            - crowdsec_db:/var/lib/crowdsec/data/
            - ./acquis.yaml:/etc/crowdsec/acquis.yaml
            - caddy_logs:/var/log/caddy:ro
        restart: unless-stopped
        security_opt:
            - no-new-privileges=true

volumes:
    postgres_data:
    ecommerce_static:
    ecommerce_media:
    caddy_data:
    caddy_config:
    caddy_logs:
    crowdsec_db: